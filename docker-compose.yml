version: '3.8'

services:
  user-service:
    build:
      context: .
      dockerfile: docker/user-service.Dockerfile
    container_name: user-service
    ports:
      - "9001:9001"
    environment:
      - APP_NAME=user-service
      - APP_VERSION=0.1.0
      - APP_HOST=0.0.0.0
      - APP_PORT=8081
      - APP_GRPC_PORT=9001
      - APP_ENVIRONMENT=production
      - APP_TRACING__ENABLED=true
      - APP_TRACING__SERVICE_NAME=user-service
      - APP_TRACING__SAMPLE_RATE=1.0
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  helloworld-service:
    build:
      context: .
      dockerfile: docker/helloworld-service.Dockerfile
    container_name: helloworld-service
    ports:
      - "8080:8080"
    environment:
      - APP_NAME=helloworld-service
      - APP_VERSION=0.1.0
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - APP_ENVIRONMENT=production
      - APP_DEPENDENCIES__0__NAME=user-service
      - APP_DEPENDENCIES__0__HOST=user-service
      - APP_DEPENDENCIES__0__PORT=9001
      - APP_DEPENDENCIES__0__PROTOCOL=grpc
      - APP_TRACING__ENABLED=true
      - APP_TRACING__SERVICE_NAME=helloworld-service
      - APP_TRACING__SAMPLE_RATE=1.0
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  default:
    name: tinyid-network
